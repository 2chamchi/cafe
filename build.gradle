plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.errand'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

//ext["hibernate.version"] = "5.6.5.Final"
ext["queryDslVersion"] = "5.0.0"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring 에서 공식적으로 지원하는 경우 버전 정보 입력하지 않아도 된다.
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// spring-data-jap 에 jdbc 포함
	// implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	// mybatis: spring 에서 공식적으로 지원하지 않기 때문에 버전 정보 입력
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage’, module: ‘junit-vintage-engine'
	}
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl, 자동 생성된 Q class gradle clean 으로 제거
clean {
	delete file('src/main/generated')
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}